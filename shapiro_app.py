# -*- coding: utf-8 -*-
"""
Aplicativo Streamlit para Teste de Normalidade Shapiro-Wilk

Este script cria um aplicativo web interativo usando Streamlit.
O usu√°rio pode inserir uma lista de n√∫meros para realizar o teste de
Shapiro-Wilk e visualizar os resultados e gr√°ficos de normalidade.
"""

import streamlit as st
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sns

# ==============================================================================
# 1. Configura√ß√£o da P√°gina do Streamlit
# ==============================================================================
st.set_page_config(
    page_title="Teste de Normalidade Shapiro-Wilk",
    page_icon="üìä",
    layout="centered",
    initial_sidebar_state="expanded"
)

st.title("üìä Teste de Normalidade Shapiro-Wilk")
st.markdown("""
    Este aplicativo permite que voc√™ verifique se um conjunto de dados segue uma distribui√ß√£o normal
    usando o teste de Shapiro-Wilk.
    Voc√™ pode inserir seus n√∫meros, e o aplicativo fornecer√° a estat√≠stica do teste,
    o valor-p e gr√°ficos para visualiza√ß√£o.
""")

# ==============================================================================
# 2. Entrada de Dados do Usu√°rio
# ==============================================================================
st.header("üî¢ Insira Seus N√∫meros")
st.info("Por favor, insira seus n√∫meros separados por v√≠rgulas (ex: 1.2, 3.4, 5.6) ou um por linha.")

# √Årea de texto para entrada de n√∫meros
# O usu√°rio pode colar ou digitar os n√∫meros aqui
input_numbers_str = st.text_area(
    "Valores (entre 10 e 30 n√∫meros)",
    value="18.66667, 18.95, 17.85, 15.73333, 16.41667, 14.5, 15.91667, 15.3, 15.41667, 15.91667, 16.41667, 16.66667, 18.95, 17.85, 15.73333",
    height=150,
    help="Cole ou digite seus n√∫meros aqui. Use v√≠rgulas ou quebras de linha para separar os valores."
)

# Bot√£o para iniciar a an√°lise
analyze_button = st.button("Analisar Dados")

# ==============================================================================
# 3. L√≥gica de An√°lise (executada ao clicar no bot√£o)
# ==============================================================================
if analyze_button:
    try:
        # Processa a string de entrada para obter uma lista de n√∫meros
        # Remove espa√ßos em branco, substitui v√≠rgulas por pontos (para decimal),
        # divide por v√≠rgulas ou quebras de linha, filtra vazios e converte para float.
        numbers_raw = input_numbers_str.replace(' ', '').replace(',', '.').replace('\n', ',').split(',')
        dados = [float(num) for num in numbers_raw if num.strip()]

        num_dados = len(dados)

        # Valida√ß√£o do n√∫mero de dados
        if num_dados < 10 or num_dados > 30:
            st.error(f"‚ùå Erro: O n√∫mero de dados fornecido ({num_dados}) est√° fora do intervalo permitido (10 a 30).")
            st.warning("Por favor, insira entre 10 e 30 n√∫meros.")
        elif num_dados == 0:
            st.error("‚ùå Erro: Nenhum dado v√°lido foi inserido. Por favor, digite ou cole seus n√∫meros.")
        else:
            st.success(f"‚úÖ Dados carregados com sucesso: {num_dados} valores.")
            st.write("---")

            # Realiza o teste de Shapiro-Wilk
            st.header("üî¨ Resultados do Teste de Shapiro-Wilk")
            statistic, p_value = stats.shapiro(dados)

            col1, col2 = st.columns(2)
            with col1:
                st.metric(label="Estat√≠stica W", value=f"{statistic:.4f}")
            with col2:
                st.metric(label="Valor-p", value=f"{p_value:.4f}")

            # Interpreta√ß√£o do resultado
            alpha = 0.05 # N√≠vel de signific√¢ncia padr√£o
            st.subheader("Conclus√£o:")
            if p_value > alpha:
                st.markdown(f"Com um n√≠vel de signific√¢ncia de **{alpha}**, o valor-p ({p_value:.4f}) √© maior que {alpha}.")
                st.markdown("Portanto, **n√£o h√° evid√™ncia estat√≠stica para rejeitar a hip√≥tese nula de normalidade.**")
                st.success("Isso sugere que os dados **PARECEM seguir uma distribui√ß√£o normal**.")
            else:
                st.markdown(f"Com um n√≠vel de signific√¢ncia de **{alpha}**, o valor-p ({p_value:.4f}) √© menor ou igual a {alpha}.")
                st.markdown("Portanto, **rejeitamos a hip√≥tese nula de normalidade.**")
                st.error("Isso sugere que os dados **N√ÉO PARECEM seguir uma distribui√ß√£o normal**.")

            st.write("---")

            # ==============================================================================
            # 4. Gera√ß√£o de Gr√°ficos para Visualiza√ß√£o
            # ==============================================================================
            st.header("üìà Visualiza√ß√£o da Distribui√ß√£o")
            st.markdown("Os gr√°ficos abaixo ajudam a visualizar a forma da distribui√ß√£o dos seus dados.")

            # Configura√ß√µes para os gr√°ficos
            plt.style.use('seaborn-v0_8-darkgrid')
            fig, axes = plt.subplots(1, 2, figsize=(14, 6))

            # --- Histograma ---
            sns.histplot(dados, kde=True, bins='auto', color='darkorange', edgecolor='black', ax=axes[0])
            axes[0].set_title('Histograma dos Dados', fontsize=14)
            axes[0].set_xlabel('Valores', fontsize=12)
            axes[0].set_ylabel('Frequ√™ncia', fontsize=12)
            axes[0].grid(axis='y', alpha=0.75)

            # --- Q-Q Plot ---
            stats.probplot(dados, dist="norm", plot=axes[1])
            axes[1].set_title('Q-Q Plot (Distribui√ß√£o Normal)', fontsize=14)
            axes[1].set_xlabel('Quantis Te√≥ricos (Normal)', fontsize=12)
            axes[1].set_ylabel('Quantis Observados', fontsize=12)
            axes[1].grid(True)

            plt.tight_layout()
            st.pyplot(fig) # Exibe a figura no Streamlit

            st.markdown("""
            **Guia de Interpreta√ß√£o dos Gr√°ficos:**
            1.  **Histograma:** Observe a forma da distribui√ß√£o. Uma distribui√ß√£o normal se assemelha a uma 'curva de sino' sim√©trica. Desvios dessa forma (assimetria, m√∫ltiplos picos, achatamento) sugerem n√£o-normalidade.
            2.  **Q-Q Plot (Quantil-Quantil):** Compare a dispers√£o dos pontos com a linha reta diagonal. Se os pontos seguirem de perto a linha reta, os dados s√£o aproximadamente normalmente distribu√≠dos. Desvios significativos da linha indicam n√£o-normalidade.
            """)
            st.info("Nota: Para amostras pequenas, a interpreta√ß√£o visual dos gr√°ficos pode ser menos conclusiva do que o resultado do teste estat√≠stico formal.")

    except ValueError:
        st.error("‚ùå Erro: Por favor, insira apenas n√∫meros v√°lidos. Verifique se n√£o h√° caracteres estranhos.")
    except Exception as e:
        st.error(f"‚ùå Ocorreu um erro inesperado: {e}")

# ==============================================================================
# 5. Informa√ß√µes Adicionais (Sidebar)
# ==============================================================================
with st.sidebar:
    st.header("Sobre o Teste de Shapiro-Wilk")
    st.markdown("""
        O teste de Shapiro-Wilk √© um teste de hip√≥tese usado para verificar
        se uma amostra de dados foi retirada de uma popula√ß√£o com distribui√ß√£o normal.

        * **Hip√≥tese Nula (H‚ÇÄ):** Os dados s√£o normalmente distribu√≠dos.
        * **Hip√≥tese Alternativa (H‚ÇÅ):** Os dados n√£o s√£o normalmente distribu√≠dos.

        **Interpreta√ß√£o do Valor-p:**
        * Se `p-valor > 0.05` (n√≠vel de signific√¢ncia comum): N√£o rejeitamos H‚ÇÄ. Os dados podem ser normais.
        * Se `p-valor ‚â§ 0.05`: Rejeitamos H‚ÇÄ. Os dados provavelmente n√£o s√£o normais.
    """)
